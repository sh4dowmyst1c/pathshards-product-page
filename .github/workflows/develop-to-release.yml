name: Develop to Release

on:
  push:
    branches:
      - develop
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  actions: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Determine bump type
        id: bump
        run: |
          # Check for breaking changes
          if git log --oneline develop ^master | grep -i "breaking\|!" ; then
            echo "bump=major" >> $GITHUB_OUTPUT
          # Check for features
          elif git log --oneline develop ^master | grep -i "feat:" ; then
            echo "bump=minor" >> $GITHUB_OUTPUT
          else
            echo "bump=patch" >> $GITHUB_OUTPUT
          fi

      - name: Bump version
        working-directory: ./app
        run: npm version ${{ steps.bump.outputs.bump }} --no-git-tag-version

      - name: Get version
        id: version
        working-directory: ./app
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Create release branch
        run: |
          VERSION=${{ steps.version.outputs.version }}
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b release/v${VERSION}
          git add app/package.json
          git commit -m "Bump version to ${VERSION}"
          git push --force origin release/v${VERSION}

      - name: Create Pull Request to release branch
        run: |
          VERSION=${{ steps.version.outputs.version }}
          TITLE="Merge develop into release v${VERSION}"
          BODY="Automated PR for merging develop into release branch ${VERSION}"
          # Check if PR already exists
          PR_EXISTS=$(gh pr list --head develop --base release/v${VERSION} --json number | jq -r '.[0].number')
          if [ "$PR_EXISTS" != "null" ] && [ -n "$PR_EXISTS" ]; then
            echo "PR #$PR_EXISTS already exists, closing it"
            gh pr close $PR_EXISTS --comment "Closing to create updated PR"
          fi
          gh pr create --base release/v${VERSION} --head develop --title "${TITLE}" --body "${BODY}"
          PR_NUMBER=$(gh pr list --head develop --base release/v${VERSION} --json number -q '.[0].number')
          gh pr merge $PR_NUMBER --merge --admin
          echo "Merged PR #$PR_NUMBER successfully"
          gh workflow run release-to-master.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
