name: Feature Branch CI

on:
  push:
    branches:
      - 'feature/**'

permissions:
  contents: write
  pull-requests: write
  actions: write

jobs:
#  install:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4

#      - name: Setup Node.js
#        uses: actions/setup-node@v4
#        with:
#          node-version: '18'

#      - name: Install dependencies
#        working-directory: ./app
#        run: make install

#  lint:
#    runs-on: ubuntu-latest
#    needs: install
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4

#      - name: Setup Node.js
#        uses: actions/setup-node@v4
#        with:
#          node-version: '18'

#      - name: Install dependencies
#        working-directory: ./app
#        run: make install

#      - name: Run lint
#        working-directory: ./app
#        run: make lint

#  cover:
#    runs-on: ubuntu-latest
#    needs: install
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4

#      - name: Setup Node.js
#        uses: actions/setup-node@v4
#        with:
#          node-version: '18'

#      - name: Install dependencies
#        working-directory: ./app
#        run: make install

#      - name: Run coverage
#        working-directory: ./app
#        run: make cover

#  build:
#    runs-on: ubuntu-latest
#    needs: install
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4

#      - name: Setup Node.js
#        uses: actions/setup-node@v4
#        with:
#          node-version: '18'

#      - name: Install dependencies
#        working-directory: ./app
#        run: make install

#      - name: Build
#        working-directory: ./app
#        run: make build

  create-pr:
    runs-on: ubuntu-latest
    # needs: [install]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create Pull Request
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          TITLE="Merge ${BRANCH_NAME} into develop"
          BODY="Automated PR for feature branch ${BRANCH_NAME}"
          # Check if PR already exists
          PR_EXISTS=$(gh pr list --head ${BRANCH_NAME} --base develop --json number | jq -r '.[0].number')
          if [ "$PR_EXISTS" != "null" ] && [ -n "$PR_EXISTS" ]; then
            echo "PR #$PR_EXISTS already exists, closing it"
            gh pr close $PR_EXISTS --comment "Closing to create updated PR"
          fi
          gh pr create --base develop --head ${BRANCH_NAME} --title "${TITLE}" --body "${BODY}"
          PR_NUMBER=$(gh pr list --head ${BRANCH_NAME} --base develop --json number -q '.[0].number')
          gh pr merge $PR_NUMBER --merge --admin
          echo "Merged PR #$PR_NUMBER successfully"
          gh workflow run "Develop to Release"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
